:css
  .axis text {
    font: 10px sans-serif;
  }

  .axis path,
  .axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
  }

  .bar {
    fill: steelblue;
    fill-opacity: .9;
    cursor: pointer;
  }

  .bartext {
    color: black;
    font-size: 9px;
  }

  .x.axis path {
    display: none;
  }

  label {
    position: absolute;
    top: 10px;
    right: 10px;
  }

#sidebar_compare

:javascript
  function aSidebarCompare(aContainer) {
    var margin = {top: 20, right: 20, bottom: 30, left: 20},
        width, height;

    var x, y, xAxis, yAxis;

    var svg;

    var color;

    var data, year;

    function delay(d, i) { return i * 5; }

    function hide() {
      $("#sidebar_compare").height(0)
      svg.selectAll("*").remove()
    }

    function sort(data) {
      var x0 = x.domain(data.sort(false
              ? function(a, b) { return a.amount - b.amount; }
              : function(a, b) { return d3.ascending(parseInt(a.label), parseInt(b.label)); })
              .map(function(d) { return d.label; }))
              .copy();

      var transition = svg.transition().duration(150),
          delay = function(d, i) { return i * 10; };

      transition.selectAll(".bar")
          .delay(delay)
          .attr("x", function(d) { return x0(d.label); });

      transition.select(".x.axis")
          .call(xAxis)
        .selectAll("g")
          .delay(delay);
    }

    function get_history_data(data) {
      compare_years = []
      $.each( data, function( year, months ) {
        compare_months = []
        $.each( months, function( month, amount ) {
          if (month > 0) {
            compare_months.push({ label: month, amount: amount });
          }
        })

        compare_years.push( { label: year, amount: months['0'], months: compare_months } )
      })
      return compare_years
    }


    function mouseclick(d) {
      svg.selectAll("*").remove();

      chart.show(year, d.label);

      //if (d.months) {
      //  show(d.months);
      //} else {
      //  show(data);
      //}
    }

    function get_month_by_num(month) {
      return #{I18n.t :abbr_month_names, :scope => :date}[month]
    }

    function show(data) {

      sort(data);

      $("#sidebar_compare").height(height + margin.top + margin.bottom);

      x.domain(data.map(function(d) { return !d.months ? get_month_by_num(d.label) : d.label; }));
      y.domain([0, d3.max(data, function(d) { return d.amount; })]);

      svg.append("g")
          .attr("class", "x axis")
          .attr("transform", "translate(0," + height + ")")
          .call(xAxis);

      //svg.append("g")
      //    .attr("class", "y axis")
      //    .call(yAxis)
      //  .append("text")
      //    .attr("transform", "rotate(-90)")
      //    .attr("y", 6)
      //    .attr("dy", ".71em")
      //    .style("text-anchor", "end")
      //

      svg.selectAll(".bar")
          .data(data)
        .enter().append("rect")
          .attr("class", "bar")
          .style("fill", function(d) { return d.color || color(d.label); })
          .attr("x", function(d) { return x(d.label); })
          .attr("width", x.rangeBand())
          .attr("y", height)
          .attr("height", 0)
          .on("click", mouseclick);

      svg.selectAll(".bartext")
        .data(data)
      .enter().append("text")
        .attr("class", "bartext")
        .attr("text-anchor", "middle")
        .attr("x", function(d) { return x(d.label) + x.rangeBand() / 2; })
        .attr("y", function(d) { return height; })


      svg.transition().duration(250).selectAll(".bar")
        .attr("height", function(d) { return height - y(d.amount); })
        .attr("y", function(d) { return y(d.amount); })

      svg.transition().duration(250).selectAll(".bartext")
        .attr("y", function(d) { return y(d.amount) - 5; })
        .text(function(d){
          return aVisify.helpers.formatNumber(d.amount);
        })

    }

    return {
      initialize: function(pHeight) {
        width = $(aContainer).width() - margin.left - margin.right,
        height = pHeight - margin.top - margin.bottom;

        x = d3.scale.ordinal()
            .rangeRoundBands([0, width], .1);

        y = d3.scale.linear()
            .range([height, 0]);

        xAxis = d3.svg.axis()
            .scale(x)
            .orient("bottom");

        //yAxis = d3.svg.axis()
        //    .scale(y)
        //    .orient("left")
        //    .tickFormat(function(d, i){
        //        return aVisify.helpers.formatNumber(d)
        //    })
        //
        svg = d3.select("#sidebar_compare").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
          .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        color = d3.scale.category20c();

      },
      hide: hide,
      show: function(_data) {

        hide();

        data = get_history_data(_data);

        if (data == null || data.length == 0){
          return;
        }

        year = data[data.length-1].label;
        show(data[data.length-1].months);             // show months compare for the last year
      },
    }
  }