-#https://github.com/benkeen/d3pie

= javascript_include_tag "d3pie.js"

:css
  #sidebar_pie {
    margin-top: 20px;
  }
#sidebar_pie

:javascript

    function aSidebarPie(aContainer) {
      var _self

      var margin = {top: 10, right: 0, bottom: 10, left: 0},
          width, height, radius


      return {
        initialize: function(pHeight, options) {
          _self = this;
          _self.clickCallback = options.clickCallback;
          _self.hoverCallback = options.hoverCallback;
          height = pHeight - margin.top - margin.bottom;
          width = $('#chart').width();
        },
        redraw: function() {
          _self.pie.redraw()
        },
        hide: function(){
          if (_self.pie){
             _self.pie.destroy()
          } else {
            $('#sidebar_pie').html('');
          }
        },
        show: function(_data) {
          this.hide()

          if (_data == null || _data.length < 1)
            return

          data = [];
          if(_data[0].parent) {
            var center_node = {"label": _data[0].parent.label, "value": _data[0].parent.amount};
            _data.forEach(function(d, index) {
              item = { label: d.label, value: d.amount, value_fact:( d.amount_fact || 0), index: index }
              //console.log(d.color)
              if (d.color) item.color = d.color
              data.push( item )
            });

            draw_data(data, center_node);
          }

          function draw_data(data, center_node) {
            _self.pie = new d3pie("sidebar_pie", {
              header: {
                title: {
                  text: ""
                },
                location: "pie-center"
              },
              size: {
                pieInnerRadius: "50%",
                pieOuterRadius: "100%",
                canvasHeight: height,
                canvasWidth: width
              },
              data: {
                  sortOrder: "value-asc",
                  smallSegmentGrouping: {
                      enabled: (data.length > 6),
                      value: 3,
                      valueType: "percentage",
                      label: I18n.t("other")
                  },
                  content: data,
                  center_node: center_node
              },
              callbacks: {
                onClickSegment: function(segment) {
                  grouped = segment.data.isGrouped
                  if (grouped) {
                    groupedData = segment.data.groupedData
                    _self.pie.updateProp("data.content", groupedData);
                  } else {
                    index = segment.data.index
                    _self.clickCallback(_data[index]);
                  }
                },
                onMouseoverSegment: function(segment){
                  if(!segment.context.__data__.isGrouped) {
                    index = segment.context.__data__.index;
                    _self.hoverCallback(_data[index]);
                  }
                },
                onMouseoutSegment: function(segment){
                  if(!segment.context.__data__.isGrouped) {
                    index = segment.context.__data__.index;
                    _self.hoverCallback(_data[index].parent);
                  }
                }
              },
              labels: {
                outer: {
                  format: 'label'
                },
                inner: {
                  format: 'none'
                }
              },

              tooltips: {
                  enabled: true,
                  //type: "placeholder",
                  //string: "{label}: {value}",
                  //
                  //// data is an object with the three properties listed below. Just modify the properties
                  //// directly - there's no need to return anything
                  //placeholderParser: function(index, data) {
                  //  data.label = data.label + "!";
                  //  //data.percentage = data.percentage.toFixed(2);
                  //  data.value = aVisify.helpers.formatNumber(data.value);
                  // },
                  // styles: {
                  //   fadeInSpeed: 300,
                  //   backgroundColor: "#00cc99",
                  //   backgroundOpacity: 0.8,
                  //   color: "#ffffcc",
                  //   borderRadius: 4,
                  //   //font: "verdana",
                  //   fontSize: 14,
                  //   //padding: 10,
                  // }

                }
            });
          };
        }
      }
    }
