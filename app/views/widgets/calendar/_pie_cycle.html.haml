:scss
  #year_place{
    font-size : 170%;
    font-family : 'Lato', sans-serif;
    color : #4f99c6;
  }

.pies-container
  #calendar_pies
    %svg#svg_calendar
  %canvas{:style => "display: none;"}

:javascript

  var aCalendarPie = function() {

    function init_pie(options) {
      d3.select('#svg_calendar').selectAll("*").remove()

      size = $('#calendar_pies').width()

      if (size == 0) return

      $.getJSON( "/widgets/calendar/pie_data/#{calendar.id}", function( data ) {
        var pie = d3.layout.pie()
            .sort(null)
            .value(function(d) { return d.value; });

        var svg = d3.select('#svg_calendar')
            .attr("width", size)
            .attr("height", size)
            .attr("version", 1.1)
            .attr("xmlns", "http://www.w3.org/2000/svg")
            .append("g")
            .attr("transform", "translate(" + size / 2 + "," + size / 2 + ")");

        var cut = size*0.04
        var radius = size / 2 - data.events1.length * cut;

        $([{events: data.events1, radius: radius, cut: -cut },
           {events: data.events2, radius: radius-10, cut: cut }]).each(function(i, cycle) {
          $(cycle.events).each(function(j, c) {
            if (cycle.radius > 0 && cycle.radius > cycle.cut) {
              var arc = create_arc(cycle.radius, cycle.radius - cycle.cut)
              var g = svg.selectAll(".arc"+i+j)
                  .data(pie(c.events))
                  .enter().append("g")
                  .attr("class", "arc"+i+j);

              append_pathAndText(g, arc,this.ends_at)

              cycle.radius = cycle.radius - cycle.cut;
            }
          })
          radius = radius - 10;
        })

        if (options && options.loadedCallback) {
          options.loadedCallback()
        }

      })
    }

    function create_arc(radius1, radius2) {
      return d3.svg.arc()
          .outerRadius(radius1)
          .innerRadius(radius2);
    }

    function append_pathAndText(g, arc,event_date) {
      event_year = new Date(event_date).getFullYear();
      var div = d3.select("body").append("div")
          .attr("class", "tooltip")
          .style("opacity", 0);

      g.append("path")
         .attr("d", arc)
         .style("fill", function(d) { return d.data.color; })
         .attr("id", function(d) { return (d.data.id == '') ? '' : "path_" + d.data.id} )
         .attr("class", function(d) { return (d.data.id == '') ? 'events_path' : "events_path actual_path"} )
         .style("cursor", function(d) { return (d.data.id == '') ? '' : 'pointer'} )
         .attr('stroke-width', function(d) { return (d.data.id == '') ? 0 : 1})
         .style("stroke", function(d) { return d3.rgb(d.data.color).darker(1); })
         .on("click", function(d) {
           if(d.data.id == '') return
           $.get("/calendars/#{calendar.id}/events/" + d.data.id)
         });

       g.append("text")
           .attr("transform", function(d) { return "translate(" + arc.centroid(d) + ")"; })
           .attr("dy", ".35em")
           .style("text-anchor", "middle")
           .html(function(d,i) {
              // TODO: show icon
              //return d.data.icon;

           })

       // Add text "2015 Year" into the middle of Calendar pie
       //g.append("text")                // append text
        // .style("font-size", "250%")
        // .style("font-family", "Helvetica, Times New Roman,Times,serif")
        // .style("fill", "#4f99c6")
        // .attr("dy", "-6.5em")           // shift on dy
        // .attr("dx", "3.2em")          // shift on dx
        // .attr("text-anchor", "start") // set anchor y justification
        // .text(event_year + " " + I18n.t('widgets.calendar.pie_cycle.year'));
        $('#year_place').html(event_year + " " + I18n.t('widgets.calendar.pie_cycle.year'));
    }

    function get_html_for_ev(d) {
      return "<h5><i class='fa " + d.data.icon + "'></i> " + d.data.title + "</h5>з <b>" + d.data.starts_at + "</b> по <b>" + d.data.ends_at + "</b>"
    }

    return {
      init_pie: init_pie
    }
  }
