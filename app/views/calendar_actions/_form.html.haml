:scss
  .pull-left.div1{
    display: block;
    position: relative;
    .radio{
      padding-left: 30px;
      display: inline-block;
      label{
        display: block;
        position: relative;
        font-weight: 300;
        font-size: 1.35em;
        padding: 25px 25px 25px 80px;
        margin: 10px auto;
        height: 30px;
        z-index: 9;
        cursor: pointer;
        -webkit-transition: all 0.25s linear;
      }
      input[type=radio]:checked{
        position: absolute;
        visibility: hidden;
      }
      input[type=radio]:checked ~ .check {
        border: 5px solid #0DFF92;
      }

      input[type=radio]:checked ~ .check::before{
        background: #0DFF92;
      }

      input[type=radio]:checked ~ label{
        color: #0DFF92;
      }
    }
    .check{
      display: block;
      position: absolute;
      border: 5px solid #AAAAAA;
      border-radius: 100%;
      height: 25px;
      width: 25px;
      top: 30px;
      left: 20px;
      z-index: 5;
      transition: border .25s linear;
      -webkit-transition: border .25s linear;
      .checked{
        background: #0DFF92;
      }
    }

    .check .inside{
      display: block;
      position: absolute;
      content: '';
      border-radius: 100%;
      background: green;
      height: 15px;
      width: 15px;
      top: 5px;
      left: 5px;
      margin: auto;
      transition: background 0.25s linear;
      -webkit-transition: background 0.25s linear;
    }
    .check .checked{
      background: #0DFF92;
    }
    .radio:hover label {
      color: blue;
    }
  }
  .checked{
    background: #0DFF92 !important;
    color:#0D4556 !important;
  }
  .div1:hover .check {
    border: 5px solid blue;
  }


= bootstrap_form_for @calendar_action, :html => { :class => 'form-vertical' } do |f|
  = f.hidden_field :holder
  -#= f.collection_radio_buttons :holder, [[1, ' Місто'], [2, ' Громада']], :first, :last, label: t('.holder')
  -#= render :partial => 'events/eventowner_select', :locals => { :holder => @calendar_action.holder, :f => f }

  = f.text_field :title, label: t('.title')

  .row
    .col-xs-12
      .pull-left
        = f.static_control label: t('.icon') do
          = f.select_without_bootstrap :icon, options_for_select(fa_icon_list, @calendar_action.icon), {}, { class: 'fa-select' }

        =f.form_group :action_type, label: { text: t('.radio_header') }  do
          = f.radio_button :action_type, CalendarAction::ACTION_TYPE_FOLDING, label: t('.radio_folding'), checked: true
          = f.radio_button :action_type, CalendarAction::ACTION_TYPE_ANALYSIS, label: t('.radio_analysis')
          = f.radio_button :action_type, CalendarAction::ACTION_TYPE_DISCUSSION, label: t('.radio_discussion')
          = f.radio_button :action_type, CalendarAction::ACTION_TYPE_EXECUTION, label: t('.radio_execution')
      -#.pull-left
      -#  = f.static_control label: t('.text_color') do
      -#    = f.select_without_bootstrap :text_color, options_for_select(text_colors_list, @calendar_action.text_color), {}, { class: 'color-select' }
      -#.pull-left
      -#  = f.static_control label: t('.color') do
      -#    = f.select_without_bootstrap :color, options_for_select(get_bg_colors_list(@calendar_action.holder), @calendar_action.color), {}, { class: 'color-select' }
      -#.pull-left
      -#  = f.hidden_field :text_color, value: "yellow"
      -#.pull-left.div1
      -#  = f.radio_button :color, "red", {class: 'eecolor-select', label: "Cкладання"}
      -#  .check
      -#    .inside
      -#.pull-left
      -#  = f.radio_button :color, "#ffb300", {class: 'eecolor-select', label: "Обговорення і затвердження"}
        -#= f.label :color, "Обговорення і затвердження", value: "#ffb300"
      -#.col-xs-2
      -#  = f.color_field :color, label: t('.color')
      -#.col-xs-2
      -#  = f.color_field :bg_color, label: t('.bg_color')
      -#

  -#= f.text_area :description, :rows => "15", label: t('.description')
  = f.text_area :description, :rows => "3", label: t('.description'), class: "wysihtml5", placeholder: t('calendars.events.form.description')

  = f.text_field :responsible, label: t('.responsible'), class: "select2 form-control can_be_disable", id: "responsible"

  = f.submit t('form.save', :default => t("helpers.links.save")), :class => 'btn btn-primary'
  = link_to t('form.cancel', :default => t("helpers.links.cancel")), calendar_actions_path, :class => 'btn btn-default'

:javascript

  $(document).ready(function() {
    formatFaSelect = function(el) {
      return '<i class=\'fa ' + el.id + '\'/> ' + el.id;
    };
    formatColorSelect = function(el) {
      return '<div style=\'width: 100%; height: 43px; background-color: ' + el.id + '\'/>';
    };
    $('.fa-select').select2({
      allowClear: true,
      formatResult: formatFaSelect,
      formatSelection: formatFaSelect,
      escapeMarkup: function(m) {
        return m;
      }
    });
    $('.color-select').select2({
      allowClear: true,
      formatResult: formatColorSelect,
      formatSelection: formatColorSelect,
      escapeMarkup: function(m) {
        return m;
      }
    });
    editor_locale = void 0;
    if (I18n.locale === 'uk') {
      editor_locale = 'ua-UA';
    } else {
      editor_locale = '';
    }
    $('.wysihtml5').wysihtml5({
      'font-styles': true,
      'emphasis': true,
      'lists': true,
      'html': false,
      'link': true,
      'image': false,
      'color': false,
      'size': 'sm',
      'locale': editor_locale
    });
  });

:javascript
  var js_array = #{raw @responsible.to_json};
  $(document).ready(function() {
    $('.select2').select2({
      tags: js_array,
      maximumSelectionSize: 1
    });
  });

:javascript
   //$('input[type=radio]:checked').click(function () {
   //  $('.inside').addClass('checked');
   //  $(this).removeClass('checked');
   //});

  //$('input:checked').parent().addClass('checked');
  //$('input.check').is(':checked').each(function() {
  //  $(this).parent('label').addClass('checked');
  //});

  //$(document).ready(function(){
  //  $("input.check").click(function(){
  //      if($(this).is(":checked")){
  //          $('.inside').addClass("checked");
  //      }
  //  });
  //});

  //$(document).ready(function(){
  //  $("input.check").click(function(){
  //      if($(this).is(":checked")){
  //          $(this).parent().addClass("checked");
  //      }
  //  });
  //});


  // $(document).ready(function(){
  //  if('input[type=radio]').checked{
  //    $('label').addClass('checked');
  //  }
  //  else{
  //    $('label').removeClass('checked');
  //  }
  //
  //});