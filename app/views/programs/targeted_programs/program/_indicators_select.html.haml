:scss
  //init colors
  $dark-blue: #0c2231;
  $white: #ffffff;
  $no-color: transparent;
  $gray: #999;

  #select2-drop {
    .select2-search {
      display: none;
    }
  }

  .select2-container {
      width: 100%;
      .select2-choice {
        height: 34px;
        border-radius: 0;
        border-color: $dark-blue;
        background-color: $no-color;
        background-image: none;
        abbr{
          right: 32px;
        }
        .select2-chosen {
          text-align: right;
          margin: 3px 46px 3px auto;
          font-size: 16px;
          color: $gray;
          //text-transform: lowercase;
          float: right;
          padding-top: 0 !important;
        }
        .select2-arrow{
          border-left: 0;
          border-radius: 0;
          background: $dark-blue;
          width: 32px;
          &:before {
            content: '\f04b';
            transform: rotate(90deg);
            font-family: FontAwesome;
            position: absolute;
            right: 0;
            cursor: pointer;
            font-size: 20px;
            width: 32px;
            height: 32px;
            background: $dark-blue;
            color: $white;
            padding: 3px 0 2px 9px;
          }
        }
        &:hover,
        &:focus {
          outline-color: inherit;
        }
      }
  }
  .select2-drop-multi {
    border-color: $dark-blue;
    margin-left: 1px;
    .select2-results {
      padding: 0;
      margin: 4px 0;
    }
  }
  .select2-drop-active {
    border: 1px solid $dark-blue;
    border-top: 0;
    border-radius: 0;
  }
-#= select_tag "#{category}", options_from_collection_for_select(data, 'id', 'title'), include_blank: true
= select_tag "#{category}",
              options_for_select(data.collect { |d| [ d[:title],
                                                      d[:id],
                                                      { 'data-value' => d[:value],
                                                        'data-measurement' => d[:measurement_unit] } ] }),
              include_blank: true

:javascript

  $("##{category}").select2({
    placeholder: "#{t(".#{category}")}" + " |"
  }).on("select2-open", function() {
    checkActiveTabs($(this));
  }).on('change', function(data) {
    selectedIndex = $(this).prop('selectedIndex');
    //TODO: Make it easy - refactor to func
    $(".indicators .tab-pane").each(function() {
      if ($(this).hasClass('active')) {
        $(this).removeClass('active');
      }
      $("##{category}-" + (selectedIndex-1)).addClass('active');
    });

    var tabId = "##{category}-" + (selectedIndex-1);
    var lineChartId = tabId + 'c';
    var barChartId = tabId + 'b';

    // func line chart
    buildLineChart(lineChartId);

    // func bar chart
    buildBarChart(barChartId)

    getValuesFromSelect(data);

  });

  //// FUNCTION'S ////
  // get object, default: $(this)
  // WARN! Use $(this) to find DOM element <li>
  // check for existing class 'active' into <li>'s
  // return <li> with active class
  function checkActiveTabs(obj) {
    // check for active class into tabs
    $(".tabs-wrapper li").each(function() {
      if ($(this).hasClass('active')) {
        $(this).removeClass('active');
      }
    });
    // add class 'active' to select2 into changed tabs
    obj.closest("li").addClass('active');
  }
  // get data, default: data from select tag
  // WARN! Get data that you pass to select tag
  // return value(number), measurement(string)
  function getValuesFromSelect(selectData) {
    value = $(selectData.added.element).data('value');
    measurement = $(selectData.added.element).data('measurement');
    // console.log('value:', value);
    // console.log('measurement:', measurement);
  }

  function buildLineChart(id) {

    // TODO: Delete fill custom data when get real

    // create default random data
    var arr1 = [], arr2 = [];

    for (var b = 100, e = 400, i = 0; b < e; i++, b+= 12) {

      var n1 = Math.round(Math.random() * e),
          n2 = Math.round(Math.random() * n1);

      (n1 > 100 && n1 < 400) ? arr1.push(n1) : i-= 1;

      (n2 > 100 && n2 < 400) ? arr2.push(n1) : i-= 1;

    }

   // create chart with 2 lines
    var c = $(id).get(0);
    var ctx = c.getContext('2d');
    var myChart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: ["2011", "2012", "2013", "2014", "2015", "2016"],
        datasets: [
          {
            label: "Dataset",

            lineTension: 0.5,

            // fill: false,
            backgroundColor: "rgba(75,192,192,0.4)",

            borderColor: "#fff",
            borderCapStyle: 'butt',
            borderDash: [],
            borderDashOffset: 0.1,
            borderJoinStyle: 'miter',

            pointRadius: 5,
            pointBorderWidth: 2,
            pointHitRadius: 4,
            pointBackgroundColor: "#0c2231",
            pointBorderColor: "#fff",

            pointHoverRadius: 5,
            pointHoverBorderWidth: 2,
            pointHoverHitRadius: 4,
            pointHoverBackgroundColor: "#ffd304",
            pointHoverBorderColor: "#fff",

            data: arr1,

            spanGaps: false
          },
          {
            label: "Dataset 1",

            lineTension: 0.5,

            // fill: false,
            backgroundColor: "rgba(240, 177, 80, 0.9)",

            borderColor: "#fff",
            borderCapStyle: 'butt',
            borderDash: [],
            borderDashOffset: 0.1,
            borderJoinStyle: 'miter',

            pointRadius: 5,
            pointBorderWidth: 2,
            pointHitRadius: 4,
            pointBackgroundColor: "#0c2231",
            pointBorderColor: "#fff",

            pointHoverRadius: 5,
            pointHoverBorderWidth: 2,
            pointHoverHitRadius: 4,
            pointHoverBackgroundColor: "#ffd304",
            pointHoverBorderColor: "#fff",

            data: arr2,

            spanGaps: false
          }
        ]
      },
      options: {
        responsive: true,
        maintainAspectRatio: true,
        scaleStartValue : 0,
        legend: {
          display: false
        },
        scales: {
          xAxes: [
            {
              gridLines: {
                display: false,
                color: '#fff',
                // lineWidth: 1,
                zeroLineWidth: 3,
                zeroLineColor: '#fff'
              },
              ticks: {
                fontColor: '#fff',
              }
            }
          ],
          yAxes: [
            {
              id: 'y-axis-0',
              gridLines: {
                // display: true,
                color: '#fff',
                // lineWidth: 1,
                zeroLineWidth: 3,
                zeroLineColor: '#fff'
              },
              scaleLabel: {
                fontColor: '#fff'
              },
              ticks: {
                fontColor: '#fff',
                padding: 20,
                min: 100,
                maxTicksLimit: 6,
                stepSize: 50
              }
            }
          ]
        }
      }
    });
  }

  function buildBarChart(id) {
    // TODO: Delete fill custom data when get real
    // create default random data
    var arr1 = [], arr2 = [];

    for (var b = 100, e = 400, i = 0; b < e; i++, b+= 12) {

      var n1 = Math.round(Math.random() * e),
          n2 = Math.round(Math.random() * n1);

      (n1 > 100 && n1 < 400) ? arr1.push(n1) : i-= 1;

      (n2 > 100 && n2 < 400) ? arr2.push(n1) : i-= 1;

    }

    // create chart with 2 lines
    var c = $(id).get(0);
    var ctx = c.getContext('2d');
    var myChart = new Chart(ctx, {
      type: 'bar',
      data: {
        labels: ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"],
        datasets: [
          {
            label: "Dataset",

            lineTension: 0.5,

            // fill: false,
            backgroundColor: "rgba(75,192,192,0.4)",

            borderColor: "#fff",
            borderCapStyle: 'butt',
            borderDash: [],
            borderDashOffset: 0.1,
            borderJoinStyle: 'miter',

            pointRadius: 5,
            pointBorderWidth: 2,
            pointHitRadius: 4,
            pointBackgroundColor: "#0c2231",
            pointBorderColor: "#fff",

            pointHoverRadius: 5,
            pointHoverBorderWidth: 2,
            pointHoverHitRadius: 4,
            pointHoverBackgroundColor: "#ffd304",
            pointHoverBorderColor: "#fff",

            data: arr1,

            spanGaps: false
          },
          {
            label: "Dataset 1",

            lineTension: 0.5,

            // fill: false,
            backgroundColor: "rgba(240, 177, 80, 0.9)",

            borderColor: "#fff",
            borderCapStyle: 'butt',
            borderDash: [],
            borderDashOffset: 0.1,
            borderJoinStyle: 'miter',

            pointRadius: 5,
            pointBorderWidth: 2,
            pointHitRadius: 4,
            pointBackgroundColor: "#0c2231",
            pointBorderColor: "#fff",

            pointHoverRadius: 5,
            pointHoverBorderWidth: 2,
            pointHoverHitRadius: 4,
            pointHoverBackgroundColor: "#ffd304",
            pointHoverBorderColor: "#fff",

            data: arr2,

            spanGaps: false
          }
        ]
      },
      options: {
        responsive: true,
        maintainAspectRatio: true,
        scaleStartValue : 0,
        legend: {
          display: false
        },
        scales: {
          xAxes: [
            {
              gridLines: {
                display: false,
                color: '#0c2231',
                // lineWidth: 1,
                zeroLineWidth: 3,
                zeroLineColor: '#0c2231'
              },
              ticks: {
                fontColor: '#0c2231',
              }
            }
          ],
          yAxes: [
            {
              id: 'y-axis-0',
              gridLines: {
                display: false,
                color: 'transparent',
                // lineWidth: 1,
                zeroLineWidth: 3,
                zeroLineColor: '#fff'
              },
              scaleLabel: {
                display: false,
                fontColor: '#fff'
              },
              ticks: {
                display: false,
                fontColor: '#fff',
                padding: 20,
                min: 100,
                maxTicksLimit: 6,
                stepSize: 50
              }
            }
          ]
        }
      }
    });
  }